// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rentcarjwt.Model.Data;

#nullable disable

namespace rentcarjwt.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ServerRcar")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("rentcarjwt.Model.Data.Entity.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("age")
                        .HasColumnType("int");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool?>("climate")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("color")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("dateСreation")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("deleteDt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("door")
                        .HasColumnType("int");

                    b.Property<float>("engineCapacity")
                        .HasColumnType("float");

                    b.Property<string>("foto")
                        .HasColumnType("longtext");

                    b.Property<string>("fuelEype")
                        .HasColumnType("longtext");

                    b.Property<string>("model")
                        .HasColumnType("longtext");

                    b.Property<int>("numberOfSeats")
                        .HasColumnType("int");

                    b.Property<float?>("price")
                        .HasColumnType("float");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("transmissionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cars", "ServerRcar");
                });

            modelBuilder.Entity("rentcarjwt.Model.Data.Entity.MarkerCar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("IdCar")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("fromDate")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("lat")
                        .HasColumnType("double");

                    b.Property<double>("lng")
                        .HasColumnType("double");

                    b.Property<DateTime?>("toDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MarkerCars", "ServerRcar");
                });

            modelBuilder.Entity("rentcarjwt.Model.Data.Entity.Messages", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CarId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Dt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserLessorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserTenantId")
                        .HasColumnType("char(36)");

                    b.Property<bool>("read")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("txt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserLessorId");

                    b.HasIndex("UserTenantId");

                    b.ToTable("Messages", "ServerRcar");
                });

            modelBuilder.Entity("rentcarjwt.Model.Data.Entity.ReserveCar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CarId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("ReserveCars", "ServerRcar");
                });

            modelBuilder.Entity("rentcarjwt.Model.Data.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DeleteDt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("RegsterDt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("age")
                        .HasColumnType("longtext");

                    b.Property<string>("avatar")
                        .HasColumnType("longtext");

                    b.Property<string>("drivingExperience")
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .HasColumnType("longtext");

                    b.Property<string>("emailConfirmCode")
                        .HasColumnType("longtext");

                    b.Property<string>("firstName")
                        .HasColumnType("longtext");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("passwordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasColumnType("longtext");

                    b.Property<string>("salt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", "ServerRcar");
                });

            modelBuilder.Entity("rentcarjwt.Model.Data.Entity.Messages", b =>
                {
                    b.HasOne("rentcarjwt.Model.Data.Entity.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rentcarjwt.Model.Data.Entity.User", "UserLessor")
                        .WithMany()
                        .HasForeignKey("UserLessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rentcarjwt.Model.Data.Entity.User", "UserTenant")
                        .WithMany()
                        .HasForeignKey("UserTenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("UserLessor");

                    b.Navigation("UserTenant");
                });

            modelBuilder.Entity("rentcarjwt.Model.Data.Entity.ReserveCar", b =>
                {
                    b.HasOne("rentcarjwt.Model.Data.Entity.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rentcarjwt.Model.Data.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
